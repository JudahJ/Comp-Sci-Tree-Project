#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define MAX_SUBORDINATES 10

struct Person {
    char name[50];
    struct Person *subordinates[MAX_SUBORDINATES];
    int sub_count;
};

int addSubordinate(struct Person *manager, struct Person *subordinate) {
    if (manager->sub_count < MAX_SUBORDINATES) {
        manager->subordinates[manager->sub_count] = subordinate;
        manager->sub_count++;
        return 0;
    } else {
        printf("Cannot add more subordinates to %s\n", manager->name);
        return -1;
    }
}

void printOrgChart(struct Person *person, int level) {
    if (person == NULL) {
        return;
    }

    for (int i = 0; i < level; i++) {
        printf("    ");
    }
    printf("%s\n", person->name);

    for (int i = 0; i < person->sub_count; i++) {
        printOrgChart(person->subordinates[i], level + 1);
    }
}

struct Person *Search_for_person(struct Person *manager, char *name){
    // If the current name matches the name we're searching for
    if (strcmp(manager->name, name) == 0) {
        return manager;
    }

    // Use recursion to search for name in tree
    for (int i = 0; i < manager->sub_count; i++) {
        // Create a new pointer to our struct
        struct Person *found = Search_for_person(manager->subordinates[i], name);

        if (found) {
            return found;
        }
    }
    // If there is no manager
    return NULL;
}
